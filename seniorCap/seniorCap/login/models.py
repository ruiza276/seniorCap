from django.db import models
from django.contrib.auth.models import User

#Skills table
class Skill(models.Model):
	#AUTOGENERATED ID
    skill_name=models.CharField(max_length=20)

#Models Table
class Major(models.Model):
	#AUTOGENERATED ID
	major_name = models.CharField(max_length=20)

#Classes table
class Class(models.Model):
	class_name=models.CharField(max_length=10, primary_key=True)
	major= models.ForeignKey(Major, on_delete=models.CASCADE)
	class_skill1 = models.ManyToManyField(Skill, related_name="cskill1", null=True)
	class_skill2 = models.ManyToManyField(Skill, related_name="cskill2", null=True, blank=True)
	class_skill3 = models.ManyToManyField(Skill, related_name="cskill3", null=True, blank=True)

#User Classes (list of classes users have taken
class user_classes(models.Model):
	#AUTOGENERATED ID
	class1 = models.ManyToManyField(Class, related_name="class1", null=True)
	class2 = models.ManyToManyField(Class, related_name="class2", null=True, blank=True)
	class3 = models.ManyToManyField(Class, related_name="class3", null=True, blank=True)
	class4 = models.ManyToManyField(Class, related_name="class4", null=True, blank=True)

#User Skills (list of skill users have)
class user_skills(models.Model):
	#AUTOGENERATED ID
	skill1 = models.ManyToManyField(Skill, related_name="uskill1", null=True)
	skill2 = models.ManyToManyField(Skill, related_name="uskill2", null=True, blank=True)
	skill3 = models.ManyToManyField(Skill, related_name="uskill3", null=True, blank=True)
	skill4 = models.ManyToManyField(Skill, related_name="uskill4", null=True, blank=True)
	skill5 = models.ManyToManyField(Skill, related_name="uskill5", null=True, blank=True)
	skill6 = models.ManyToManyField(Skill, related_name="uskill6", null=True, blank=True)
	skill7 = models.ManyToManyField(Skill, related_name="uskill7", null=True, blank=True)
	skill8 = models.ManyToManyField(Skill, related_name="uskill8", null=True, blank=True)
	skill9 = models.ManyToManyField(Skill, related_name="uskill9", null=True, blank=True)

# Everything we need to know about users
# THIS IS AMAZING https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html#onetoone
# ALSO AMAZING OMG https://stackoverflow.com/questions/8609192/differentiate-null-true-blank-true-in-django
class UserProfile(models.Model):
	#USER OBJECT FROM DJANGO GENERATED TABLE
	user = models.OneToOneField(User, on_delete=models.CASCADE, primary_key=True)
	#CHOSEN MAJOR
	major = models.ForeignKey(Major, on_delete=models.CASCADE)
	# COURSES TAKEN
	courses= models.OneToOneField(user_classes, on_delete=models.CASCADE)
	#ALL SKILLS OF THE USER
	skills= models.OneToOneField(user_skills, on_delete=models.CASCADE)

	def __str__(self):
		return self.user.username

#@reciever (post_save, sender=User)
#def create_user_profile (sender, instance, created, **kwargs):
#	if created:
#		Profile.object.create(user=instance)

#@reciever(post_save, sender=User)
#def save_user_profile(sender, instance, **kwargs):
#	instance.profile.save()

#Everything we need to know about a job
class Job(models.Model):
	#ID AUTOGENERATED
	job_title = models.CharField(max_length=50)
	job_description = models.CharField(max_length=500)
	business_name = models.CharField(max_length=50)

	job_major = models.ForeignKey(Major, on_delete=models.CASCADE)
	job_skill1 = models.ManyToManyField(Skill, related_name="jskil1", null=True)
	job_skill2 = models.ManyToManyField(Skill, related_name="jskil2", null=True, blank=True)
	job_skill3 = models.ManyToManyField(Skill, related_name="jskil3", null=True, blank=True)
	job_skill4 = models.ManyToManyField(Skill, related_name="jskil4", null=True, blank=True)
	job_skill5 = models.ManyToManyField(Skill, related_name="jskil5", null=True, blank=True)